// source: restaurant.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var basic_pb = require('./basic_pb.js');
goog.object.extend(proto, basic_pb);
var currency_pb = require('./currency_pb.js');
goog.object.extend(proto, currency_pb);
goog.exportSymbol('proto.restaurant.AddRestaurantReq', null, global);
goog.exportSymbol('proto.restaurant.Address', null, global);
goog.exportSymbol('proto.restaurant.Days', null, global);
goog.exportSymbol('proto.restaurant.Payment', null, global);
goog.exportSymbol('proto.restaurant.PaymentMode', null, global);
goog.exportSymbol('proto.restaurant.Restaurant', null, global);
goog.exportSymbol('proto.restaurant.Restaurant.Contact', null, global);
goog.exportSymbol('proto.restaurant.Slot', null, global);
goog.exportSymbol('proto.restaurant.SubscriptionPlan', null, global);
goog.exportSymbol('proto.restaurant.Timings', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.restaurant.Payment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.restaurant.Payment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.restaurant.Payment.displayName = 'proto.restaurant.Payment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.restaurant.Slot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.restaurant.Slot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.restaurant.Slot.displayName = 'proto.restaurant.Slot';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.restaurant.Timings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.restaurant.Timings.repeatedFields_, null);
};
goog.inherits(proto.restaurant.Timings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.restaurant.Timings.displayName = 'proto.restaurant.Timings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.restaurant.Address = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.restaurant.Address, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.restaurant.Address.displayName = 'proto.restaurant.Address';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.restaurant.Restaurant = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.restaurant.Restaurant.repeatedFields_, null);
};
goog.inherits(proto.restaurant.Restaurant, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.restaurant.Restaurant.displayName = 'proto.restaurant.Restaurant';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.restaurant.Restaurant.Contact = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.restaurant.Restaurant.Contact, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.restaurant.Restaurant.Contact.displayName = 'proto.restaurant.Restaurant.Contact';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.restaurant.AddRestaurantReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.restaurant.AddRestaurantReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.restaurant.AddRestaurantReq.displayName = 'proto.restaurant.AddRestaurantReq';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.restaurant.Payment.prototype.toObject = function(opt_includeInstance) {
  return proto.restaurant.Payment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.restaurant.Payment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.restaurant.Payment.toObject = function(includeInstance, msg) {
  var f, obj = {
    gstin: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pan: jspb.Message.getFieldWithDefault(msg, 2, ""),
    upi: jspb.Message.getFieldWithDefault(msg, 3, ""),
    bankName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    accountName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    accountNumber: jspb.Message.getFieldWithDefault(msg, 6, ""),
    ifsc: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.restaurant.Payment}
 */
proto.restaurant.Payment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.restaurant.Payment;
  return proto.restaurant.Payment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.restaurant.Payment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.restaurant.Payment}
 */
proto.restaurant.Payment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGstin(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPan(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpi(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountNumber(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setIfsc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.restaurant.Payment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.restaurant.Payment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.restaurant.Payment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.restaurant.Payment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGstin();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPan();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUpi();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBankName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAccountName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAccountNumber();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIfsc();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string gstin = 1;
 * @return {string}
 */
proto.restaurant.Payment.prototype.getGstin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.Payment} returns this
 */
proto.restaurant.Payment.prototype.setGstin = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string pan = 2;
 * @return {string}
 */
proto.restaurant.Payment.prototype.getPan = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.Payment} returns this
 */
proto.restaurant.Payment.prototype.setPan = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string upi = 3;
 * @return {string}
 */
proto.restaurant.Payment.prototype.getUpi = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.Payment} returns this
 */
proto.restaurant.Payment.prototype.setUpi = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string bank_name = 4;
 * @return {string}
 */
proto.restaurant.Payment.prototype.getBankName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.Payment} returns this
 */
proto.restaurant.Payment.prototype.setBankName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string account_name = 5;
 * @return {string}
 */
proto.restaurant.Payment.prototype.getAccountName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.Payment} returns this
 */
proto.restaurant.Payment.prototype.setAccountName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string account_number = 6;
 * @return {string}
 */
proto.restaurant.Payment.prototype.getAccountNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.Payment} returns this
 */
proto.restaurant.Payment.prototype.setAccountNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string ifsc = 7;
 * @return {string}
 */
proto.restaurant.Payment.prototype.getIfsc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.Payment} returns this
 */
proto.restaurant.Payment.prototype.setIfsc = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.restaurant.Slot.prototype.toObject = function(opt_includeInstance) {
  return proto.restaurant.Slot.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.restaurant.Slot} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.restaurant.Slot.toObject = function(includeInstance, msg) {
  var f, obj = {
    startTime: jspb.Message.getFieldWithDefault(msg, 1, ""),
    endTime: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.restaurant.Slot}
 */
proto.restaurant.Slot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.restaurant.Slot;
  return proto.restaurant.Slot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.restaurant.Slot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.restaurant.Slot}
 */
proto.restaurant.Slot.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartTime(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.restaurant.Slot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.restaurant.Slot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.restaurant.Slot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.restaurant.Slot.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartTime();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEndTime();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string start_time = 1;
 * @return {string}
 */
proto.restaurant.Slot.prototype.getStartTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.Slot} returns this
 */
proto.restaurant.Slot.prototype.setStartTime = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string end_time = 2;
 * @return {string}
 */
proto.restaurant.Slot.prototype.getEndTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.Slot} returns this
 */
proto.restaurant.Slot.prototype.setEndTime = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.restaurant.Timings.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.restaurant.Timings.prototype.toObject = function(opt_includeInstance) {
  return proto.restaurant.Timings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.restaurant.Timings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.restaurant.Timings.toObject = function(includeInstance, msg) {
  var f, obj = {
    day: jspb.Message.getFieldWithDefault(msg, 1, 0),
    slotsList: jspb.Message.toObjectList(msg.getSlotsList(),
    proto.restaurant.Slot.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.restaurant.Timings}
 */
proto.restaurant.Timings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.restaurant.Timings;
  return proto.restaurant.Timings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.restaurant.Timings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.restaurant.Timings}
 */
proto.restaurant.Timings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.restaurant.Days} */ (reader.readEnum());
      msg.setDay(value);
      break;
    case 2:
      var value = new proto.restaurant.Slot;
      reader.readMessage(value,proto.restaurant.Slot.deserializeBinaryFromReader);
      msg.addSlots(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.restaurant.Timings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.restaurant.Timings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.restaurant.Timings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.restaurant.Timings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDay();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getSlotsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.restaurant.Slot.serializeBinaryToWriter
    );
  }
};


/**
 * optional Days day = 1;
 * @return {!proto.restaurant.Days}
 */
proto.restaurant.Timings.prototype.getDay = function() {
  return /** @type {!proto.restaurant.Days} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.restaurant.Days} value
 * @return {!proto.restaurant.Timings} returns this
 */
proto.restaurant.Timings.prototype.setDay = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * repeated Slot slots = 2;
 * @return {!Array<!proto.restaurant.Slot>}
 */
proto.restaurant.Timings.prototype.getSlotsList = function() {
  return /** @type{!Array<!proto.restaurant.Slot>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.restaurant.Slot, 2));
};


/**
 * @param {!Array<!proto.restaurant.Slot>} value
 * @return {!proto.restaurant.Timings} returns this
*/
proto.restaurant.Timings.prototype.setSlotsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.restaurant.Slot=} opt_value
 * @param {number=} opt_index
 * @return {!proto.restaurant.Slot}
 */
proto.restaurant.Timings.prototype.addSlots = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.restaurant.Slot, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.restaurant.Timings} returns this
 */
proto.restaurant.Timings.prototype.clearSlotsList = function() {
  return this.setSlotsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.restaurant.Address.prototype.toObject = function(opt_includeInstance) {
  return proto.restaurant.Address.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.restaurant.Address} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.restaurant.Address.toObject = function(includeInstance, msg) {
  var f, obj = {
    line1: jspb.Message.getFieldWithDefault(msg, 1, ""),
    line2: jspb.Message.getFieldWithDefault(msg, 2, ""),
    city: jspb.Message.getFieldWithDefault(msg, 3, ""),
    cityId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    state: jspb.Message.getFieldWithDefault(msg, 5, ""),
    country: jspb.Message.getFieldWithDefault(msg, 6, ""),
    countryId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    pincode: jspb.Message.getFieldWithDefault(msg, 8, 0),
    geoLatitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    geoLongitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    timezone: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.restaurant.Address}
 */
proto.restaurant.Address.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.restaurant.Address;
  return proto.restaurant.Address.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.restaurant.Address} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.restaurant.Address}
 */
proto.restaurant.Address.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLine1(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLine2(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCityId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryId(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPincode(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setGeoLatitude(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setGeoLongitude(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimezone(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.restaurant.Address.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.restaurant.Address.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.restaurant.Address} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.restaurant.Address.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLine1();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLine2();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCityId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCountryId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPincode();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getGeoLatitude();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getGeoLongitude();
  if (f !== 0.0) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = message.getTimezone();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string line1 = 1;
 * @return {string}
 */
proto.restaurant.Address.prototype.getLine1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.Address} returns this
 */
proto.restaurant.Address.prototype.setLine1 = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string line2 = 2;
 * @return {string}
 */
proto.restaurant.Address.prototype.getLine2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.Address} returns this
 */
proto.restaurant.Address.prototype.setLine2 = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string city = 3;
 * @return {string}
 */
proto.restaurant.Address.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.Address} returns this
 */
proto.restaurant.Address.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string city_id = 4;
 * @return {string}
 */
proto.restaurant.Address.prototype.getCityId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.Address} returns this
 */
proto.restaurant.Address.prototype.setCityId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string state = 5;
 * @return {string}
 */
proto.restaurant.Address.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.Address} returns this
 */
proto.restaurant.Address.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string country = 6;
 * @return {string}
 */
proto.restaurant.Address.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.Address} returns this
 */
proto.restaurant.Address.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string country_id = 7;
 * @return {string}
 */
proto.restaurant.Address.prototype.getCountryId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.Address} returns this
 */
proto.restaurant.Address.prototype.setCountryId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 pincode = 8;
 * @return {number}
 */
proto.restaurant.Address.prototype.getPincode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.restaurant.Address} returns this
 */
proto.restaurant.Address.prototype.setPincode = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional float geo_latitude = 9;
 * @return {number}
 */
proto.restaurant.Address.prototype.getGeoLatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.restaurant.Address} returns this
 */
proto.restaurant.Address.prototype.setGeoLatitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional float geo_longitude = 10;
 * @return {number}
 */
proto.restaurant.Address.prototype.getGeoLongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.restaurant.Address} returns this
 */
proto.restaurant.Address.prototype.setGeoLongitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional string timezone = 11;
 * @return {string}
 */
proto.restaurant.Address.prototype.getTimezone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.Address} returns this
 */
proto.restaurant.Address.prototype.setTimezone = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.restaurant.Restaurant.repeatedFields_ = [7,13,14,15,16];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.restaurant.Restaurant.prototype.toObject = function(opt_includeInstance) {
  return proto.restaurant.Restaurant.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.restaurant.Restaurant} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.restaurant.Restaurant.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: (f = msg.getName()) && basic_pb.Name.toObject(includeInstance, f),
    username: jspb.Message.getFieldWithDefault(msg, 3, ""),
    hashword: jspb.Message.getFieldWithDefault(msg, 4, ""),
    hashwordSalt: jspb.Message.getFieldWithDefault(msg, 5, 0),
    contactsList: jspb.Message.toObjectList(msg.getContactsList(),
    proto.restaurant.Restaurant.Contact.toObject, includeInstance),
    personOfContact: jspb.Message.getFieldWithDefault(msg, 8, ""),
    logo: jspb.Message.getFieldWithDefault(msg, 9, ""),
    profileImage: jspb.Message.getFieldWithDefault(msg, 10, ""),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    address: (f = msg.getAddress()) && proto.restaurant.Address.toObject(includeInstance, f),
    imagesList: (f = jspb.Message.getRepeatedField(msg, 13)) == null ? undefined : f,
    fcmTokensList: (f = jspb.Message.getRepeatedField(msg, 14)) == null ? undefined : f,
    paymentModesList: (f = jspb.Message.getRepeatedField(msg, 15)) == null ? undefined : f,
    timingsList: jspb.Message.toObjectList(msg.getTimingsList(),
    proto.restaurant.Timings.toObject, includeInstance),
    subscriptionPlan: jspb.Message.getFieldWithDefault(msg, 17, 0),
    subscriptionPrice: jspb.Message.getFloatingPointFieldWithDefault(msg, 18, 0.0),
    curreny: (f = msg.getCurreny()) && currency_pb.Currency.toObject(includeInstance, f),
    assignedSalesEmpId: jspb.Message.getFieldWithDefault(msg, 21, ""),
    assignedOpsEmpId: jspb.Message.getFieldWithDefault(msg, 22, ""),
    trialDays: jspb.Message.getFloatingPointFieldWithDefault(msg, 23, 0.0),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.restaurant.Restaurant}
 */
proto.restaurant.Restaurant.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.restaurant.Restaurant;
  return proto.restaurant.Restaurant.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.restaurant.Restaurant} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.restaurant.Restaurant}
 */
proto.restaurant.Restaurant.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new basic_pb.Name;
      reader.readMessage(value,basic_pb.Name.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setHashword(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHashwordSalt(value);
      break;
    case 7:
      var value = new proto.restaurant.Restaurant.Contact;
      reader.readMessage(value,proto.restaurant.Restaurant.Contact.deserializeBinaryFromReader);
      msg.addContacts(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPersonOfContact(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogo(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setProfileImage(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 12:
      var value = new proto.restaurant.Address;
      reader.readMessage(value,proto.restaurant.Address.deserializeBinaryFromReader);
      msg.setAddress(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.addImages(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.addFcmTokens(value);
      break;
    case 15:
      var value = /** @type {!Array<!proto.restaurant.PaymentMode>} */ (reader.readPackedEnum());
      msg.setPaymentModesList(value);
      break;
    case 16:
      var value = new proto.restaurant.Timings;
      reader.readMessage(value,proto.restaurant.Timings.deserializeBinaryFromReader);
      msg.addTimings(value);
      break;
    case 17:
      var value = /** @type {!proto.restaurant.SubscriptionPlan} */ (reader.readEnum());
      msg.setSubscriptionPlan(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSubscriptionPrice(value);
      break;
    case 20:
      var value = new currency_pb.Currency;
      reader.readMessage(value,currency_pb.Currency.deserializeBinaryFromReader);
      msg.setCurreny(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssignedSalesEmpId(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssignedOpsEmpId(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTrialDays(value);
      break;
    case 24:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 25:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.restaurant.Restaurant.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.restaurant.Restaurant.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.restaurant.Restaurant} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.restaurant.Restaurant.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      basic_pb.Name.serializeBinaryToWriter
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getHashword();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getHashwordSalt();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getContactsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.restaurant.Restaurant.Contact.serializeBinaryToWriter
    );
  }
  f = message.getPersonOfContact();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getLogo();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getProfileImage();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getAddress();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.restaurant.Address.serializeBinaryToWriter
    );
  }
  f = message.getImagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      13,
      f
    );
  }
  f = message.getFcmTokensList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      14,
      f
    );
  }
  f = message.getPaymentModesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      15,
      f
    );
  }
  f = message.getTimingsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      proto.restaurant.Timings.serializeBinaryToWriter
    );
  }
  f = message.getSubscriptionPlan();
  if (f !== 0.0) {
    writer.writeEnum(
      17,
      f
    );
  }
  f = message.getSubscriptionPrice();
  if (f !== 0.0) {
    writer.writeFloat(
      18,
      f
    );
  }
  f = message.getCurreny();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      currency_pb.Currency.serializeBinaryToWriter
    );
  }
  f = message.getAssignedSalesEmpId();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getAssignedOpsEmpId();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getTrialDays();
  if (f !== 0.0) {
    writer.writeFloat(
      23,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      25,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.restaurant.Restaurant.Contact.prototype.toObject = function(opt_includeInstance) {
  return proto.restaurant.Restaurant.Contact.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.restaurant.Restaurant.Contact} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.restaurant.Restaurant.Contact.toObject = function(includeInstance, msg) {
  var f, obj = {
    phoneNumber: jspb.Message.getFieldWithDefault(msg, 1, ""),
    email: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.restaurant.Restaurant.Contact}
 */
proto.restaurant.Restaurant.Contact.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.restaurant.Restaurant.Contact;
  return proto.restaurant.Restaurant.Contact.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.restaurant.Restaurant.Contact} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.restaurant.Restaurant.Contact}
 */
proto.restaurant.Restaurant.Contact.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhoneNumber(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.restaurant.Restaurant.Contact.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.restaurant.Restaurant.Contact.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.restaurant.Restaurant.Contact} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.restaurant.Restaurant.Contact.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPhoneNumber();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string phone_number = 1;
 * @return {string}
 */
proto.restaurant.Restaurant.Contact.prototype.getPhoneNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.Restaurant.Contact} returns this
 */
proto.restaurant.Restaurant.Contact.prototype.setPhoneNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string email = 2;
 * @return {string}
 */
proto.restaurant.Restaurant.Contact.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.Restaurant.Contact} returns this
 */
proto.restaurant.Restaurant.Contact.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.restaurant.Restaurant.Contact.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.Restaurant.Contact} returns this
 */
proto.restaurant.Restaurant.Contact.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.restaurant.Restaurant.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.Restaurant} returns this
 */
proto.restaurant.Restaurant.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Name name = 2;
 * @return {?proto.restaurant.Name}
 */
proto.restaurant.Restaurant.prototype.getName = function() {
  return /** @type{?proto.restaurant.Name} */ (
    jspb.Message.getWrapperField(this, basic_pb.Name, 2));
};


/**
 * @param {?proto.restaurant.Name|undefined} value
 * @return {!proto.restaurant.Restaurant} returns this
*/
proto.restaurant.Restaurant.prototype.setName = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.restaurant.Restaurant} returns this
 */
proto.restaurant.Restaurant.prototype.clearName = function() {
  return this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.restaurant.Restaurant.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string username = 3;
 * @return {string}
 */
proto.restaurant.Restaurant.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.Restaurant} returns this
 */
proto.restaurant.Restaurant.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string hashword = 4;
 * @return {string}
 */
proto.restaurant.Restaurant.prototype.getHashword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.Restaurant} returns this
 */
proto.restaurant.Restaurant.prototype.setHashword = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 hashword_salt = 5;
 * @return {number}
 */
proto.restaurant.Restaurant.prototype.getHashwordSalt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.restaurant.Restaurant} returns this
 */
proto.restaurant.Restaurant.prototype.setHashwordSalt = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * repeated Contact contacts = 7;
 * @return {!Array<!proto.restaurant.Restaurant.Contact>}
 */
proto.restaurant.Restaurant.prototype.getContactsList = function() {
  return /** @type{!Array<!proto.restaurant.Restaurant.Contact>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.restaurant.Restaurant.Contact, 7));
};


/**
 * @param {!Array<!proto.restaurant.Restaurant.Contact>} value
 * @return {!proto.restaurant.Restaurant} returns this
*/
proto.restaurant.Restaurant.prototype.setContactsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.restaurant.Restaurant.Contact=} opt_value
 * @param {number=} opt_index
 * @return {!proto.restaurant.Restaurant.Contact}
 */
proto.restaurant.Restaurant.prototype.addContacts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.restaurant.Restaurant.Contact, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.restaurant.Restaurant} returns this
 */
proto.restaurant.Restaurant.prototype.clearContactsList = function() {
  return this.setContactsList([]);
};


/**
 * optional string person_of_contact = 8;
 * @return {string}
 */
proto.restaurant.Restaurant.prototype.getPersonOfContact = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.Restaurant} returns this
 */
proto.restaurant.Restaurant.prototype.setPersonOfContact = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string logo = 9;
 * @return {string}
 */
proto.restaurant.Restaurant.prototype.getLogo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.Restaurant} returns this
 */
proto.restaurant.Restaurant.prototype.setLogo = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string profile_image = 10;
 * @return {string}
 */
proto.restaurant.Restaurant.prototype.getProfileImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.Restaurant} returns this
 */
proto.restaurant.Restaurant.prototype.setProfileImage = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional bool active = 11;
 * @return {boolean}
 */
proto.restaurant.Restaurant.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.restaurant.Restaurant} returns this
 */
proto.restaurant.Restaurant.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional Address address = 12;
 * @return {?proto.restaurant.Address}
 */
proto.restaurant.Restaurant.prototype.getAddress = function() {
  return /** @type{?proto.restaurant.Address} */ (
    jspb.Message.getWrapperField(this, proto.restaurant.Address, 12));
};


/**
 * @param {?proto.restaurant.Address|undefined} value
 * @return {!proto.restaurant.Restaurant} returns this
*/
proto.restaurant.Restaurant.prototype.setAddress = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.restaurant.Restaurant} returns this
 */
proto.restaurant.Restaurant.prototype.clearAddress = function() {
  return this.setAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.restaurant.Restaurant.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * repeated string images = 13;
 * @return {!Array<string>}
 */
proto.restaurant.Restaurant.prototype.getImagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 13));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.restaurant.Restaurant} returns this
 */
proto.restaurant.Restaurant.prototype.setImagesList = function(value) {
  return jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.restaurant.Restaurant} returns this
 */
proto.restaurant.Restaurant.prototype.addImages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.restaurant.Restaurant} returns this
 */
proto.restaurant.Restaurant.prototype.clearImagesList = function() {
  return this.setImagesList([]);
};


/**
 * repeated string fcm_tokens = 14;
 * @return {!Array<string>}
 */
proto.restaurant.Restaurant.prototype.getFcmTokensList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 14));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.restaurant.Restaurant} returns this
 */
proto.restaurant.Restaurant.prototype.setFcmTokensList = function(value) {
  return jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.restaurant.Restaurant} returns this
 */
proto.restaurant.Restaurant.prototype.addFcmTokens = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.restaurant.Restaurant} returns this
 */
proto.restaurant.Restaurant.prototype.clearFcmTokensList = function() {
  return this.setFcmTokensList([]);
};


/**
 * repeated PaymentMode payment_modes = 15;
 * @return {!Array<!proto.restaurant.PaymentMode>}
 */
proto.restaurant.Restaurant.prototype.getPaymentModesList = function() {
  return /** @type {!Array<!proto.restaurant.PaymentMode>} */ (jspb.Message.getRepeatedField(this, 15));
};


/**
 * @param {!Array<!proto.restaurant.PaymentMode>} value
 * @return {!proto.restaurant.Restaurant} returns this
 */
proto.restaurant.Restaurant.prototype.setPaymentModesList = function(value) {
  return jspb.Message.setField(this, 15, value || []);
};


/**
 * @param {!proto.restaurant.PaymentMode} value
 * @param {number=} opt_index
 * @return {!proto.restaurant.Restaurant} returns this
 */
proto.restaurant.Restaurant.prototype.addPaymentModes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 15, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.restaurant.Restaurant} returns this
 */
proto.restaurant.Restaurant.prototype.clearPaymentModesList = function() {
  return this.setPaymentModesList([]);
};


/**
 * repeated Timings timings = 16;
 * @return {!Array<!proto.restaurant.Timings>}
 */
proto.restaurant.Restaurant.prototype.getTimingsList = function() {
  return /** @type{!Array<!proto.restaurant.Timings>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.restaurant.Timings, 16));
};


/**
 * @param {!Array<!proto.restaurant.Timings>} value
 * @return {!proto.restaurant.Restaurant} returns this
*/
proto.restaurant.Restaurant.prototype.setTimingsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.restaurant.Timings=} opt_value
 * @param {number=} opt_index
 * @return {!proto.restaurant.Timings}
 */
proto.restaurant.Restaurant.prototype.addTimings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.restaurant.Timings, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.restaurant.Restaurant} returns this
 */
proto.restaurant.Restaurant.prototype.clearTimingsList = function() {
  return this.setTimingsList([]);
};


/**
 * optional SubscriptionPlan subscription_plan = 17;
 * @return {!proto.restaurant.SubscriptionPlan}
 */
proto.restaurant.Restaurant.prototype.getSubscriptionPlan = function() {
  return /** @type {!proto.restaurant.SubscriptionPlan} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {!proto.restaurant.SubscriptionPlan} value
 * @return {!proto.restaurant.Restaurant} returns this
 */
proto.restaurant.Restaurant.prototype.setSubscriptionPlan = function(value) {
  return jspb.Message.setProto3EnumField(this, 17, value);
};


/**
 * optional float subscription_price = 18;
 * @return {number}
 */
proto.restaurant.Restaurant.prototype.getSubscriptionPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 18, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.restaurant.Restaurant} returns this
 */
proto.restaurant.Restaurant.prototype.setSubscriptionPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 18, value);
};


/**
 * optional Currency curreny = 20;
 * @return {?proto.restaurant.Currency}
 */
proto.restaurant.Restaurant.prototype.getCurreny = function() {
  return /** @type{?proto.restaurant.Currency} */ (
    jspb.Message.getWrapperField(this, currency_pb.Currency, 20));
};


/**
 * @param {?proto.restaurant.Currency|undefined} value
 * @return {!proto.restaurant.Restaurant} returns this
*/
proto.restaurant.Restaurant.prototype.setCurreny = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.restaurant.Restaurant} returns this
 */
proto.restaurant.Restaurant.prototype.clearCurreny = function() {
  return this.setCurreny(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.restaurant.Restaurant.prototype.hasCurreny = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional string assigned_sales_emp_id = 21;
 * @return {string}
 */
proto.restaurant.Restaurant.prototype.getAssignedSalesEmpId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.Restaurant} returns this
 */
proto.restaurant.Restaurant.prototype.setAssignedSalesEmpId = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string assigned_ops_emp_id = 22;
 * @return {string}
 */
proto.restaurant.Restaurant.prototype.getAssignedOpsEmpId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.Restaurant} returns this
 */
proto.restaurant.Restaurant.prototype.setAssignedOpsEmpId = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional float trial_days = 23;
 * @return {number}
 */
proto.restaurant.Restaurant.prototype.getTrialDays = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 23, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.restaurant.Restaurant} returns this
 */
proto.restaurant.Restaurant.prototype.setTrialDays = function(value) {
  return jspb.Message.setProto3FloatField(this, 23, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 24;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.restaurant.Restaurant.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 24));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.restaurant.Restaurant} returns this
*/
proto.restaurant.Restaurant.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 24, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.restaurant.Restaurant} returns this
 */
proto.restaurant.Restaurant.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.restaurant.Restaurant.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 25;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.restaurant.Restaurant.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 25));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.restaurant.Restaurant} returns this
*/
proto.restaurant.Restaurant.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 25, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.restaurant.Restaurant} returns this
 */
proto.restaurant.Restaurant.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.restaurant.Restaurant.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 25) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.restaurant.AddRestaurantReq.prototype.toObject = function(opt_includeInstance) {
  return proto.restaurant.AddRestaurantReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.restaurant.AddRestaurantReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.restaurant.AddRestaurantReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = msg.getName()) && basic_pb.Name.toObject(includeInstance, f),
    username: jspb.Message.getFieldWithDefault(msg, 2, ""),
    password: jspb.Message.getFieldWithDefault(msg, 3, ""),
    logo: jspb.Message.getFieldWithDefault(msg, 6, ""),
    profileImage: jspb.Message.getFieldWithDefault(msg, 7, ""),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    address: (f = msg.getAddress()) && proto.restaurant.Address.toObject(includeInstance, f),
    subscriptionPlan: jspb.Message.getFieldWithDefault(msg, 12, 0),
    subscriptionPrice: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 0.0),
    defaultCurrenyId: jspb.Message.getFieldWithDefault(msg, 20, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.restaurant.AddRestaurantReq}
 */
proto.restaurant.AddRestaurantReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.restaurant.AddRestaurantReq;
  return proto.restaurant.AddRestaurantReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.restaurant.AddRestaurantReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.restaurant.AddRestaurantReq}
 */
proto.restaurant.AddRestaurantReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new basic_pb.Name;
      reader.readMessage(value,basic_pb.Name.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogo(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setProfileImage(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 9:
      var value = new proto.restaurant.Address;
      reader.readMessage(value,proto.restaurant.Address.deserializeBinaryFromReader);
      msg.setAddress(value);
      break;
    case 12:
      var value = /** @type {!proto.restaurant.SubscriptionPlan} */ (reader.readEnum());
      msg.setSubscriptionPlan(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSubscriptionPrice(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultCurrenyId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.restaurant.AddRestaurantReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.restaurant.AddRestaurantReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.restaurant.AddRestaurantReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.restaurant.AddRestaurantReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      basic_pb.Name.serializeBinaryToWriter
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLogo();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getProfileImage();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getAddress();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.restaurant.Address.serializeBinaryToWriter
    );
  }
  f = message.getSubscriptionPlan();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getSubscriptionPrice();
  if (f !== 0.0) {
    writer.writeFloat(
      13,
      f
    );
  }
  f = message.getDefaultCurrenyId();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
};


/**
 * optional Name name = 1;
 * @return {?proto.restaurant.Name}
 */
proto.restaurant.AddRestaurantReq.prototype.getName = function() {
  return /** @type{?proto.restaurant.Name} */ (
    jspb.Message.getWrapperField(this, basic_pb.Name, 1));
};


/**
 * @param {?proto.restaurant.Name|undefined} value
 * @return {!proto.restaurant.AddRestaurantReq} returns this
*/
proto.restaurant.AddRestaurantReq.prototype.setName = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.restaurant.AddRestaurantReq} returns this
 */
proto.restaurant.AddRestaurantReq.prototype.clearName = function() {
  return this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.restaurant.AddRestaurantReq.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string username = 2;
 * @return {string}
 */
proto.restaurant.AddRestaurantReq.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.AddRestaurantReq} returns this
 */
proto.restaurant.AddRestaurantReq.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string password = 3;
 * @return {string}
 */
proto.restaurant.AddRestaurantReq.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.AddRestaurantReq} returns this
 */
proto.restaurant.AddRestaurantReq.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string logo = 6;
 * @return {string}
 */
proto.restaurant.AddRestaurantReq.prototype.getLogo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.AddRestaurantReq} returns this
 */
proto.restaurant.AddRestaurantReq.prototype.setLogo = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string profile_image = 7;
 * @return {string}
 */
proto.restaurant.AddRestaurantReq.prototype.getProfileImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.AddRestaurantReq} returns this
 */
proto.restaurant.AddRestaurantReq.prototype.setProfileImage = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool active = 8;
 * @return {boolean}
 */
proto.restaurant.AddRestaurantReq.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.restaurant.AddRestaurantReq} returns this
 */
proto.restaurant.AddRestaurantReq.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional Address address = 9;
 * @return {?proto.restaurant.Address}
 */
proto.restaurant.AddRestaurantReq.prototype.getAddress = function() {
  return /** @type{?proto.restaurant.Address} */ (
    jspb.Message.getWrapperField(this, proto.restaurant.Address, 9));
};


/**
 * @param {?proto.restaurant.Address|undefined} value
 * @return {!proto.restaurant.AddRestaurantReq} returns this
*/
proto.restaurant.AddRestaurantReq.prototype.setAddress = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.restaurant.AddRestaurantReq} returns this
 */
proto.restaurant.AddRestaurantReq.prototype.clearAddress = function() {
  return this.setAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.restaurant.AddRestaurantReq.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional SubscriptionPlan subscription_plan = 12;
 * @return {!proto.restaurant.SubscriptionPlan}
 */
proto.restaurant.AddRestaurantReq.prototype.getSubscriptionPlan = function() {
  return /** @type {!proto.restaurant.SubscriptionPlan} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.restaurant.SubscriptionPlan} value
 * @return {!proto.restaurant.AddRestaurantReq} returns this
 */
proto.restaurant.AddRestaurantReq.prototype.setSubscriptionPlan = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};


/**
 * optional float subscription_price = 13;
 * @return {number}
 */
proto.restaurant.AddRestaurantReq.prototype.getSubscriptionPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.restaurant.AddRestaurantReq} returns this
 */
proto.restaurant.AddRestaurantReq.prototype.setSubscriptionPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional string default_curreny_id = 20;
 * @return {string}
 */
proto.restaurant.AddRestaurantReq.prototype.getDefaultCurrenyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.restaurant.AddRestaurantReq} returns this
 */
proto.restaurant.AddRestaurantReq.prototype.setDefaultCurrenyId = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * @enum {number}
 */
proto.restaurant.SubscriptionPlan = {
  MONTHLY: 0,
  QUATERLY: 1,
  HALF_YEARLY: 2,
  YEARLY: 3
};

/**
 * @enum {number}
 */
proto.restaurant.PaymentMode = {
  CASH: 0,
  CARD: 1,
  ONLINE: 2,
  WALLET: 3
};

/**
 * @enum {number}
 */
proto.restaurant.Days = {
  MONDAY: 0,
  TUESDAY: 1,
  WEDNESDAY: 2,
  THURSDAY: 3,
  FRIDAY: 4,
  SATURDAY: 5,
  SUNDAY: 6
};

goog.object.extend(exports, proto.restaurant);
